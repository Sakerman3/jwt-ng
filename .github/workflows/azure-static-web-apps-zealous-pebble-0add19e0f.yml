# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - jwt-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9773C788988A45F2A3F259025C42D93A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8504DFDD876B4C01ABAA9AD27545489D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_83D34F921FBF408393189873C205C126 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'jwt-app'
          slot-name: 'Production'
          package: .
          

# name: Azure Static Web Apps CI/CD

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     types: [ opened, synchronize, reopened, closed ]
#     branches: [ main ]

# jobs:
#   build_and_deploy_job:
#     if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#     runs-on: ubuntu-latest
#     name: Build and Deploy Job
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           submodules: true
#           lfs: false
#           persist-credentials: false

#       # (Optional but recommended) build Angular explicitly
#       - name: Use Node 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
#           cache-dependency-path: package-lock.json

#       - name: Build Angular (production)
#         run: |
#           npm ci
#           npm run build -- --configuration production
#           test -d dist/jwt-ng || (echo "::error::dist/jwt-ng not found" && exit 1)

#       # Get a GitHub OIDC ID token (NO require, core is provided by github-script)
#       - name: Get Id Token
#         id: idtoken
#         uses: actions/github-script@v7
#         with:
#           script: |
#             return await core.getIDToken()
#           result-encoding: string

#       - name: Build And Deploy
#         id: builddeploy
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           action: "upload"
#           github_id_token: ${{ steps.idtoken.outputs.result }}
#           app_location: "/"            # change to "jwt-ng" if your app is in a subfolder
#           api_location: ""             # no Functions API in this repo
#           output_location: "dist/jwt-ng"
#           skip_api_build: true

#   close_pull_request_job:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed'
#     runs-on: ubuntu-latest
#     name: Close Pull Request Job
#     steps:
#       - name: Close Pull Request
#         id: closepullrequest
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           action: "close"
